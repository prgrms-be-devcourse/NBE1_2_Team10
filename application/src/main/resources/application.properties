spring.application.name=application

# Datasource
spring.datasource.url=${database.url}
spring.datasource.username=${database.username}
spring.datasource.password=${database.password}

# Persistence profile
spring.profiles.active=jpa

# MyBatis
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.mapper-locations=classpath:mappers/**/*.xml

# Spring data jpa
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true

# KmDB open API
kmdb.api.key=${key}
kmdb.api.url=http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api
kmdb.api.default.image=${movie.default-poster}

# Swagger
springdoc.swagger-ui.path=/api-test
springdoc.swagger-ui.groups-order=desc
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=method

# Google Cloud Storage
spring.cloud.gcp.storage.credentials.location=${gcp.location}

# Redis
spring.data.redis.host=${redis.host}
spring.data.redis.port=${redis.port}
spring.data.redis.password=${redis.password}

# JWT
spring.jwt.secret = ${jwt.secret}

# Refresh token timeout
token.refresh.timeout=14

# Access token timeout
token.access.timeout=3600000

# naver OAuth registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${naver.client.id}
spring.security.oauth2.client.registration.naver.client-secret=${naver.client.secret}
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email

# naver OAuth provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# google OAuth registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${google.client.id}
spring.security.oauth2.client.registration.google.client-secret=${google.client.secret}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=https://www.googleapis.com/auth/userinfo.email, https://www.googleapis.com/auth/userinfo.profile